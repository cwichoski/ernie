################################################################################
#
# This file contains TODO items not specific to an individual source file
#
#################################################################################
#
# Legend:
#
# - An item that begins with n number of *'s where n>0 is a task
# - An item with n number of *'s where n>1 is a sub-task of the previous
#     item with n-1 number of *'s
# - An item with n number of -'s followed by a > is a note to the previous
#     item with n number of *'s
#
################################################################################

# Pre development tasks
## All are in Jira as Stories/Sub-tasks
[ ]* Build environment
[ ]** Set up Hudson project
[ ]*** Set up Husdon with auto build (auto deploy to test?)
[ ]* Test environment
[ ]** Set up test server
[ ]*** Test DB?
[ ]* Test framework
[x]** TestNG for unit tests
[ ]** Find framework for REST API testing
[x]** JaCoCo for code coverage reports
[ ]** Finalize test process/standards
[ ]*** Unit tests
[ ]**** Minimum code coverage
[ ]*** System tests
[ ]* Initial state
[ ]** Get project source in solid state before starting "real" development
[ ]* Documentation
[ ]** Document all currently existing source

# All projects
[ ]* Redo/Add more unit tests to all projects
[ ]** Look into framework for unit testing RESTful web service API
[x]** Add and set up JaCoCo for code coverage
[x]*** Verify that JaCoCo works with Scala
[ ]* Create util library (ernie-util)
[ ]** Scala util
[ ]*** Put try_ from ReportGenerator into util object
[ ]** Java util
[ ]* Move all references to base URIs to server layer
[ ]** Remove all references to base URIs from model layer
[ ]--> This may need to remain as part of the responses
[ ]** Remove all references to base URIs from engine layer

# ernie-model
[x]* Add ReportType enum (PDF, HTML, CSV, etc.)

# ernie-engine
[ ]* Split filesystem management into new class ReportManager
[x]** Look into CAS frameworks for Java/Scala
[ ]*** Use standard file structure for storing definitions/results
[ ]* Look into BIRT .rptdesign validation
[ ]* Add CSV generation to ReportGenerator (CSV Emitter for BIRT)
[x]** Verify CSV generation package meets license standards
[x]--> Uses Eclipse Public License

# erner-server
[ ]* Unit tests
[ ]** Add unit tests for REST API
